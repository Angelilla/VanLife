{"ast":null,"code":"var _jsxFileName = \"/home/angela/Escritorio/IRON JULIO/VanLife/van-life-client/src/lib/AuthProvider.js\";\nimport React, { Component } from \"react\";\nimport auth from \"./auth-service\";\nconst {\n  Consumer,\n  Provider\n} = React.createContext();\n\nconst withAuth = WrappedComponent => {};\n\nclass AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedin: false,\n      user: null,\n      isLoading: true\n    };\n\n    this.signup = user => {\n      const {\n        username,\n        email,\n        password\n      } = user;\n      auth.signup({\n        username,\n        emaail,\n        password\n      }).then(user => this.setState({\n        isLoggedin: true,\n        user\n      })).catch(({\n        response\n      }) => this.setState({\n        message: response.data.statusMessage\n      }));\n    };\n\n    this.login = user => {\n      const {\n        email,\n        password\n      } = user;\n      auth.login({\n        email,\n        password\n      }).then(user => this.setState({\n        isLoggedin: true,\n        user\n      })).catch(err => console.log(err));\n    };\n\n    this.logout = () => {\n      auth.logout().then(() => this.setState({\n        isLoggedin: false,\n        user: null\n      })).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    auth.me().then(user => this.setState({\n      isLoggedin: true,\n      user: user,\n      isLoading: false\n    })).catch(err => this.setState({\n      isLoggedin: false,\n      user: null,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      isLoading,\n      isLoggedin,\n      user\n    } = this.state;\n    const {\n      login,\n      logout,\n      signup\n    } = this;\n    return isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(Provider, {\n      value: {\n        isLoggedin,\n        user,\n        login,\n        logout,\n        signup\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, this.props.children);\n    /*<Provider> \"value={}\" datos que estarán disponibles para todos los componentes <Consumer> */\n  }\n\n}\n\nexport { Consumer, withAuth };\nexport default AuthProvider;","map":{"version":3,"sources":["/home/angela/Escritorio/IRON JULIO/VanLife/van-life-client/src/lib/AuthProvider.js"],"names":["React","Component","auth","Consumer","Provider","createContext","withAuth","WrappedComponent","AuthProvider","state","isLoggedin","user","isLoading","signup","username","email","password","emaail","then","setState","catch","response","message","data","statusMessage","login","err","console","log","logout","componentDidMount","me","render","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport auth from \"./auth-service\";\t\nconst { Consumer, Provider } = React.createContext();\n\nconst withAuth = (WrappedComponent) => {};\n\nclass AuthProvider extends Component {\n\n    state = {\n        isLoggedin: false,\n        user: null, \n        isLoading: true\n    }\n\n    componentDidMount() {\n        auth.me()\n        .then((user) => this.setState({ isLoggedin: true, user: user, isLoading: false }))\n        .catch((err) => this.setState({ isLoggedin: false, user: null, isLoading: false }));\n    }\n\n    signup = (user) => {\n\n        const { username, email, password } = user;\n\n        auth.signup({ username, emaail, password })\n            .then((user) => this.setState({ isLoggedin: true, user}) )\n            .catch(({response}) => this.setState({ message: response.data.statusMessage}));\n    };\n\n    login = (user) => {\n\n        const { email, password } = user;\n\n        auth.login({ email, password })\n            .then((user) => this.setState({ isLoggedin: true, user }))\n            .catch((err) => console.log(err));\n    };\n        \n    logout = () => {\n\n        auth.logout()\n            .then(() => this.setState({ isLoggedin: false, user: null }))\n            .catch((err) => console.log(err));\n    };\n\n    render() {\n        const { isLoading, isLoggedin, user } = this.state;\n        const { login, logout, signup } = this;\n        \n        return (\n          isLoading ? \n          <div>Loading</div> \n          :\n          (<Provider value={{ isLoggedin, user, login, logout, signup}} >\n             {this.props.children}\n          </Provider>)\n        )\t/*<Provider> \"value={}\" datos que estarán disponibles para todos los componentes <Consumer> */\n      }\n\n}\n\nexport { Consumer, withAuth };\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}