{"ast":null,"code":"var _jsxFileName = \"/home/angela/Escritorio/IRON JULIO/VanLife/van-life-client/src/lib/AuthProvider.js\";\nimport React, { Component } from \"react\";\nimport auth from \"./auth-service\";\nconst {\n  Consumer,\n  Provider\n} = React.createContext();\n\nconst withAuth = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return /*#__PURE__*/React.createElement(Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }\n      }, ({\n        login,\n        signup,\n        user,\n        logout,\n        isLoggedin\n      }) => {\n        return /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({\n          login: login,\n          signup: signup,\n          user: user,\n          logout: logout,\n          isLoggedin: isLoggedin\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }\n        }));\n      });\n    }\n\n  };\n};\n\nclass AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedin: false,\n      user: null,\n      isLoading: true\n    };\n\n    this.signup = user => {\n      const {\n        username,\n        email,\n        password\n      } = user;\n      auth.signup({\n        username,\n        email,\n        password\n      }).then(user => this.setState({\n        isLoggedin: true,\n        user\n      })).catch(({\n        response\n      }) => this.setState({\n        message: response.data.statusMessage\n      }));\n    };\n\n    this.login = user => {\n      const {\n        email,\n        password\n      } = user;\n      auth.login({\n        email,\n        password\n      }).then(user => this.setState({\n        isLoggedin: true,\n        user\n      })).catch(err => console.log(err));\n    };\n\n    this.logout = () => {\n      auth.logout().then(() => this.setState({\n        isLoggedin: false,\n        user: null\n      })).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    auth.me().then(user => this.setState({\n      isLoggedin: true,\n      user: user,\n      isLoading: false\n    })).catch(err => this.setState({\n      isLoggedin: false,\n      user: null,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      isLoading,\n      isLoggedin,\n      user\n    } = this.state;\n    const {\n      login,\n      logout,\n      signup\n    } = this;\n    return isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(Provider, {\n      value: {\n        isLoggedin,\n        user,\n        login,\n        logout,\n        signup\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    }, this.props.children);\n    /*<Provider> \"value={}\" datos que estarán disponibles para todos los componentes <Consumer> */\n  }\n\n}\n\nexport { Consumer, withAuth };\nexport default AuthProvider;","map":{"version":3,"sources":["/home/angela/Escritorio/IRON JULIO/VanLife/van-life-client/src/lib/AuthProvider.js"],"names":["React","Component","auth","Consumer","Provider","createContext","withAuth","WrappedComponent","render","login","signup","user","logout","isLoggedin","props","AuthProvider","state","isLoading","username","email","password","then","setState","catch","response","message","data","statusMessage","err","console","log","componentDidMount","me","children"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport auth from \"./auth-service\";\t\nconst { Consumer, Provider } = React.createContext();\n\nconst withAuth = (WrappedComponent) => {\n\n    return class extends React.Component {\n      render() {\n        \n        return (\n          <Consumer>\n          { \n            ({login, signup, user, logout, isLoggedin}) => {\n            return (\n              <WrappedComponent \n                login={login} \n                signup={signup} \n                user={user}\n                logout={logout}\n                isLoggedin={isLoggedin}\n                {...this.props} />\n            );\n          }\n          }\n          </Consumer>\n        );\n      }\n    };\n};\n\nclass AuthProvider extends Component {\n\n    state = {\n        isLoggedin: false,\n        user: null, \n        isLoading: true\n    }\n\n    componentDidMount() {\n        auth.me()\n        .then((user) => this.setState({ isLoggedin: true, user: user, isLoading: false }))\n        .catch((err) => this.setState({ isLoggedin: false, user: null, isLoading: false }));\n    }\n\n    signup = (user) => {\n\n        const { username, email, password } = user;\n\n        auth.signup({ username, email, password })\n            .then((user) => this.setState({ isLoggedin: true, user}) )\n            .catch(({response}) => this.setState({ message: response.data.statusMessage}));\n    };\n\n    login = (user) => {\n\n        const { email, password } = user;\n\n        auth.login({ email, password })\n            .then((user) => this.setState({ isLoggedin: true, user }))\n            .catch((err) => console.log(err));\n    };\n        \n    logout = () => {\n\n        auth.logout()\n            .then(() => this.setState({ isLoggedin: false, user: null }))\n            .catch((err) => console.log(err));\n    };\n\n    render() {\n        const { isLoading, isLoggedin, user } = this.state;\n        const { login, logout, signup } = this;\n        \n        return (\n          isLoading ? \n          <div>Loading</div> \n          :\n          (<Provider value={{ isLoggedin, user, login, logout, signup}} >\n             {this.props.children}\n          </Provider>)\n        )\t/*<Provider> \"value={}\" datos que estarán disponibles para todos los componentes <Consumer> */\n      }\n\n}\n\nexport { Consumer, withAuth };\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}